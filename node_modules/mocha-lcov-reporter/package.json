{
  "name": "mocha-lcov-reporter",
  "description": "LCOV reporter for Mocha",
  "version": "0.0.2",
  "author": {
    "name": "Steven Looman",
    "email": "steven.looman@gmail.com"
  },
  "keywords": [
    "mocha",
    "reporter",
    "lcov",
    "coverage"
  ],
  "licenses": [
    {
      "type": "2-clause BSD",
      "url": "https://raw.github.com/StevenLooman/mocha-lcov-reporter/master/LICENSE"
    }
  ],
  "dependencies": {},
  "devDependencies": {},
  "directories": {
    "lib": "./lib"
  },
  "main": "index.js",
  "engines": {
    "node": ">= 0.6.0"
  },
  "scripts": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/StevenLooman/mocha-lcov-reporter.git"
  },
  "readme": "mocha-lcov-reporter\n===================\n\nLCOV reporter for Mocha.\n\nLCOV format can be found in this [geninfo manpage](http://ltp.sourceforge.net/coverage/lcov/geninfo.1.php). This LCOV reporter was built after [Sonar Javascript Plugin LCOVParser class](https://github.com/SonarCommunity/sonar-javascript/blob/master/sonar-javascript-plugin/src/main/java/org/sonar/plugins/javascript/lcov/LCOVParser.java).\n\nUsage\n=====\n\nThe mocha-lcov-reporter is a reporter for mocha. In order to get coverage data, the same instructions are to be followed as for the `JSONCov` and `HTMLCov` reporters:\n\n- Install [jscover](https://github.com/node-modules/jscover) or [node-jscoverage](https://github.com/visionmedia/node-jscoverage)\n- Instrument your library with `jscover` (or `node-jscoverage`)\n- Run your tests against your instrumented library and save the output\n\nFor example, the following script can be part of your build process (add `jscover`, `mocha`, and `mocha-lcov-reporter` as `devDependencies` to your `package.json` file and run `npm install`):\n\n```\n#!/usr/bin/env bash\nrm -rf coverage\nrm -rf lib-cov\n\nmkdir coverage\n\nnode_modules/.bin/jscover lib lib-cov\nmv lib lib-orig\nmv lib-cov lib\nnode_modules/.bin/mocha -R mocha-lcov-reporter > coverage/coverage.lcov\nrm -rf lib\nmv lib-orig lib\n```\n\nThis script instruments your sources (source 'lib', target 'lib-cov'), temporarily replaces your library by the instrumented version, run the tests against the instrumented version of your sources, and undoes the replacing of the original library by the instrumented library.\n\nA safer and better approach is to instrument your library (target 'lib-cov'), and include that directory from your tests directly. Instead of doing a 'require(\"../lib\")' do a 'require(\"../lib-cov\")'. This saves the hassle of replacing directory 'lib' with directory 'lib-cov' and undoing it afterwards. You can use an environment variable to check if the instrumented library should be included or the normal version:\n\n```\nvar lib = process.env.JSCOV ? require('../lib-cov') : require('../lib');\n```\n\nAnd to get the test-coverage, run mocha as follows:\n\n```\nJSCOV=1 mocha -R mocha-lcov-reporter > coverage/coverage.lcov\n```\n\nSee the [SaXPath project](https://github.com/StevenLooman/saxpath) for an example on how to do this.\n\nIncomplete paths in LCOV output\n===============================\n\nUnfortunately, when the code is instrumented using `jscover` or `node-jscoverage`, the output of the reporter will have incomplete paths for the covered files. A quick fix is to update the paths after running the tests with the mocha-lcov-reporter, like so:\n\n```\n# run the tests\nJS_COV=1 ./node_modules/.bin/mocha -R mocha-lcov-reporter > coverage/coverage_temp.lcov\n\n# fix the paths\nsed 's,SF:,SF:lib/,' coverage/coverage_temp.lcov > coverage/coverage.lcov\n```\n\nThe reason this is that `jscover` runs on the directory you specify (e.g., `lib/`) and regards that as the root for the project.\n\nExample output\n==============\n\nWhat does LCOV output look like? LCOV is meant to be interpreted by other programs and not meant to be readable by humans. This is an example:\n\n```\nSF:base_unit.js\nDA:1,1\nDA:4,1\nDA:5,155\nDA:7,155\nDA:8,140\nDA:9,140\nDA:12,155\nDA:13,155\nDA:16,1\nDA:17,1\nDA:20,1\nDA:21,9\nDA:24,1\nDA:25,40\nDA:28,1\nDA:29,26\nDA:32,1\nDA:33,7\nDA:36,1\nDA:37,6\nDA:40,1\nDA:41,45\nDA:44,1\nDA:45,52\nDA:51,1\nDA:52,3\nDA:55,1\nend_of_record\n```\n\nIf you are looking for something human readable, the `HTMLCov` reporter can be used.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/StevenLooman/mocha-lcov-reporter/issues"
  },
  "_id": "mocha-lcov-reporter@0.0.2",
  "dist": {
    "shasum": "8bc454bb903fd8956b088819e221309c4d363771"
  },
  "_from": "mocha-lcov-reporter@0.0.2",
  "_resolved": "https://registry.npmjs.org/mocha-lcov-reporter/-/mocha-lcov-reporter-0.0.2.tgz"
}
